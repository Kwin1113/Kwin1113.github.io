<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Kwin的学习博客</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://kwin1113.github.io/"/>
  <updated>2019-02-04T16:56:19.849Z</updated>
  <id>http://kwin1113.github.io/</id>
  
  <author>
    <name>Kwin Jing</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>基本特性与基于LinuxZK命令行</title>
    <link href="http://kwin1113.github.io/passages/Tools/ZooKeeper/%E5%9F%BA%E6%9C%AC%E7%89%B9%E6%80%A7%E4%B8%8E%E5%9F%BA%E4%BA%8ELinuxZK%E5%91%BD%E4%BB%A4%E8%A1%8C/"/>
    <id>http://kwin1113.github.io/passages/Tools/ZooKeeper/基本特性与基于LinuxZK命令行/</id>
    <published>2019-02-04T15:45:50.000Z</published>
    <updated>2019-02-04T16:56:19.849Z</updated>
    
    <content type="html"><![CDATA[<!-- 文章的摘要内容 --><a id="more"></a><!-- 文章的正式内容 --><h3 id="zk常用命令行操作"><a href="#zk常用命令行操作" class="headerlink" title="zk常用命令行操作"></a>zk常用命令行操作</h3><ul><li>通过./zkCli.sh打开zk的客户端进行命令行后台</li><li>ls与ls2命令</li><li>get与stat命令</li><li>create命令</li><li>set命令</li><li>delete命令<h3 id="zk特性-session的基本原理"><a href="#zk特性-session的基本原理" class="headerlink" title="zk特性-session的基本原理"></a>zk特性-session的基本原理</h3></li><li>客户端和服务端之间的连接存在会话</li><li>每个会话都可以设置一个超时时间</li><li>心跳结束，session则过期</li><li>Session过期，则临时节点znode会被抛弃</li><li>心跳机制：客户端向服务端的ping包请求<h3 id="zk特性-watcher机制"><a href="#zk特性-watcher机制" class="headerlink" title="zk特性-watcher机制"></a>zk特性-watcher机制</h3></li><li>针对每个节点的操作，都会有一个监督者-&gt;watcher</li><li>当监控的某个对象（znode）发生了变化，则触发watcher事件</li><li>zk中的watcher是一次性的，触发后立即销毁</li><li>父节点，子节点增删改都能触发其watcher</li><li>针对不同类型的操作，触发的watcher事件也不同</li></ul><ol><li>（子）节点创建事件</li><li>（子）节点删除事件</li><li>（子）节点数据变化事件<h3 id="watcher命令行"><a href="#watcher命令行" class="headerlink" title="watcher命令行"></a>watcher命令行</h3></li></ol><ul><li>通过get path [watcher] 设置watcher</li><li>父节点增删改操作触发watcher</li><li>子节点增删改操作触发watcher<h3 id="watcher事件类型"><a href="#watcher事件类型" class="headerlink" title="watcher事件类型"></a>watcher事件类型</h3></li><li>创建父节点触发：NodeCreated</li><li>修改父节点数据触发：NodeDataChanged</li><li>删除父节点触发：NodeDeleted</li><li>ls为父节点设置watcher，创建子节点触发：NodeChildrenChanged</li><li>ls为父节点设置watcher，删除子节点触发：NodeChildrenChanged</li><li>ls为父节点设置watcher，修改子节点不触发事件<h3 id="使用watcher统一资源配置"><a href="#使用watcher统一资源配置" class="headerlink" title="使用watcher统一资源配置"></a>使用watcher统一资源配置</h3><img src="/passages/Tools/ZooKeeper/基本特性与基于LinuxZK命令行/1.png" alt="1e139a7309075333800889174e51abf6.png"><h3 id="ACL"><a href="#ACL" class="headerlink" title="ACL"></a>ACL</h3><h4 id="ACL（Access-Control-Lists）权限控制"><a href="#ACL（Access-Control-Lists）权限控制" class="headerlink" title="ACL（Access Control Lists）权限控制"></a>ACL（Access Control Lists）权限控制</h4></li><li>针对节点可以设置相关读写等权限，目的为了保障数据安全性</li><li>权限permissions可以指定不同的权限范围以及角色<h4 id="ACL命令行"><a href="#ACL命令行" class="headerlink" title="ACL命令行"></a>ACL命令行</h4></li><li>getAcl：获取某个节点的acl权限信息</li><li>setAcl：设置某个节点的acl权限信息</li><li>addauth：输入认证授权信息，注册时输入明文密码（登陆），但是在zk的系统中，密码是以加密的形式存在的</li></ul><h4 id="ACL的构成"><a href="#ACL的构成" class="headerlink" title="ACL的构成"></a>ACL的构成</h4><ul><li>zk的acl通过[scheme:id:permissions]来构成权限列表</li><li>scheme：代表采用的某种权限机制</li><li>id：代表允许访问的用户</li><li>permissions：权限组合字符串<h5 id="scheme"><a href="#scheme" class="headerlink" title="scheme"></a>scheme</h5></li><li>world：world下只有一个id，即只有一个用户，也就是anyone，那么组合的写法就是world:anyone:[permissions]</li><li>auth：代表认证登陆，需要注册用户有权限就可以，形式为auth:user:password:[permissions]</li><li>digest：需要对密码加密才能访问，组合形式为diges:username:BASE64(SHA1(password)):[permissions]</li><li>简而言之，auth和digest的区别就是，前者明文，后者密文，setAcl /path auth:lee:lee:cdrwa与setAcl /path digest:lee:BASE64(SHA1(password))cdrwa是等价的，在通过addauth digest lee:lee后都能操作指定节点的权限</li><li>ip：当设置为ip指定的ip地址，此时限制ip进行访问，比如ip：192.168.1.1:[permissions]</li><li><p>super：代表超级管理员，拥有所有的权限</p><h5 id="permissions"><a href="#permissions" class="headerlink" title="permissions"></a>permissions</h5><p>权限字符串缩写 crdwa</p></li><li><p>CREATE：创建子节点</p></li><li>READ：获取节点/子节点</li><li>DELETE：删除子节点</li><li>WRITE：设置节点数据</li><li>ADMIN：设置权限<h3 id="ZooKeeper集群搭建"><a href="#ZooKeeper集群搭建" class="headerlink" title="ZooKeeper集群搭建"></a>ZooKeeper集群搭建</h3></li><li>zk集群，主从节点，心跳机制（选举模式）<br><img src="/passages/Tools/ZooKeeper/基本特性与基于LinuxZK命令行/2.png" alt="2482ccce2dea05f2325c2f8a19035199.png"><h4 id="注意点"><a href="#注意点" class="headerlink" title="注意点"></a>注意点</h4></li><li>配置数据文件 myid 1/2/3 对应 server.1/2/3</li><li>通过./zkCli.sh -server [ip]:[port] 检测集群是否配置成功<h4 id="真实环境搭建"><a href="#真实环境搭建" class="headerlink" title="真实环境搭建"></a>真实环境搭建</h4></li><li>环境变量的配置，ip配置不同，端口号可以相同</li><li>集群测试，选举测试</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;!-- 文章的摘要内容 --&gt;
    
    </summary>
    
      <category term="Tools" scheme="http://kwin1113.github.io/categories/Tools/"/>
    
      <category term="ZooKeeper" scheme="http://kwin1113.github.io/categories/Tools/ZooKeeper/"/>
    
    
      <category term="ZooKeeper" scheme="http://kwin1113.github.io/tags/ZooKeeper/"/>
    
  </entry>
  
  <entry>
    <title>ZooKeeper简介</title>
    <link href="http://kwin1113.github.io/passages/Tools/ZooKeeper/ZooKeeper%E7%AE%80%E4%BB%8B/"/>
    <id>http://kwin1113.github.io/passages/Tools/ZooKeeper/ZooKeeper简介/</id>
    <published>2019-02-04T15:45:21.000Z</published>
    <updated>2019-02-04T16:56:15.462Z</updated>
    
    <content type="html"><![CDATA[<!-- 文章的摘要内容 --><a id="more"></a><!-- 文章的正式内容 --><h3 id="ZooKeeper"><a href="#ZooKeeper" class="headerlink" title="ZooKeeper"></a>ZooKeeper</h3><ul><li>中间件，提供协调服务</li><li>作用于分布式系统，发挥其优势，可以为大数据服务</li><li>支持java，提供java和c语言api<h3 id="什么是分布式系统"><a href="#什么是分布式系统" class="headerlink" title="什么是分布式系统"></a>什么是分布式系统</h3></li><li>很多台计算机组成一个整体，一个整体一致对外并且处理同一请求</li><li>内部的每台计算机都可以相互通信（rest/rpc）</li><li>客户端到服务端的一次请求到相应结束会历经多台计算机<h4 id="分布式系统图解"><a href="#分布式系统图解" class="headerlink" title="分布式系统图解"></a>分布式系统图解</h4><img src="/passages/Tools/ZooKeeper/ZooKeeper简介/1.png" alt="bdde75723bdd7ed6656afbe94c0fcfff.png"><br><img src="/passages/Tools/ZooKeeper/ZooKeeper简介/2.png" alt="fae191b0a38debc86523abf122200ced.png"><h3 id="ZooKeeper的特性"><a href="#ZooKeeper的特性" class="headerlink" title="ZooKeeper的特性"></a>ZooKeeper的特性</h3></li><li>一致性：数据一致性，数据按照顺序分批入库</li><li>原子性：事务要么成功，要么失败，不会局部化</li><li>单一视图：客户端连接集群中的任一zk节点，数据都是一致的</li><li>可靠性：每次对zk的操作状态都会保存在服务端</li><li>实时性：客户端可以读取到zk服务端的最新数据<h3 id="zoo-cfg配置"><a href="#zoo-cfg配置" class="headerlink" title="zoo.cfg配置"></a>zoo.cfg配置</h3></li><li>tickTime：用于计算的事件单元。比如session超时：N*tickTime。</li><li>initLimit：用于集群，允许从节点连接并同步到master节点的初始化连接事件，以tickTime的倍数表示。</li><li>syncLimit：用于集群，master主节点与从节点之间发送消息，请求和应答事件长度。（心跳机制）</li><li>dataDir：数据目录（必须配置。</li><li>dataLogDir：日志目录，如果不配置会和dataDir公用</li><li><p>clientPort：连接服务器的端口，默认2181</p><h3 id="ZooKeeper基本数据模型"><a href="#ZooKeeper基本数据模型" class="headerlink" title="ZooKeeper基本数据模型"></a>ZooKeeper基本数据模型</h3><p><img src="/passages/Tools/ZooKeeper/ZooKeeper简介/3.png" alt="6d07cfe8d023be77e2d75f87ef484a05.png"><br><img src="/passages/Tools/ZooKeeper/ZooKeeper简介/4.png" alt="5ec00d5550b0327403e830f0c93de6b5.png"></p></li><li><p>zk的数据模型也可以理解为linux/unix的文件目录：/usr/local/…</p></li><li>每一个节点都称之为znode，它可以有子节点，也可以有数据</li><li>每个节点分为临时节点和永久节点，临时节点在客户端断开后消失</li><li>每个zk节点都有各自的版本号，可以通过命令行来显示节点信息</li><li>每当节点数据发生变化，那么节点的版本号会累加（乐观锁）</li><li>删除/修改过时节点，版本号不匹配则会报错</li><li>每个zk节点存储的数据不宜过大，几K即可</li><li>节点可以设置权限acl，可以通过权限来限制用户访问<h3 id="ZooKeeper数据模型基本操作"><a href="#ZooKeeper数据模型基本操作" class="headerlink" title="ZooKeeper数据模型基本操作"></a>ZooKeeper数据模型基本操作</h3></li><li>客户端连接</li><li>查看znode结构</li><li>关闭客户端连接<h3 id="zk的作用体现"><a href="#zk的作用体现" class="headerlink" title="zk的作用体现"></a>zk的作用体现</h3></li><li>master节点选举，主节点挂了以后，从节点就会接收工作，并且保证这个节点是唯一的，这也是所谓首脑模式，从而保证我们的集群是高可用的。</li><li>统一配置文件管理，即只需要部署一台服务器，则可以把相同的配置文件同步更新到其他所有服务器，此操作在云计算中用的特别多</li><li>发布与订阅，类似消息队列MQ（amq，rmq…），dubbo发布者把数据存到znode上，订阅者会读取这个数据</li><li>提供分布式锁，分布式环境中不同进程之间争夺资源，类似于多线程中的锁</li><li>集群管理，集群中保证数据的强一致性</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;!-- 文章的摘要内容 --&gt;
    
    </summary>
    
      <category term="Tools" scheme="http://kwin1113.github.io/categories/Tools/"/>
    
      <category term="ZooKeeper" scheme="http://kwin1113.github.io/categories/Tools/ZooKeeper/"/>
    
    
      <category term="ZooKeeper" scheme="http://kwin1113.github.io/tags/ZooKeeper/"/>
    
  </entry>
  
  <entry>
    <title>Tomcat容器等级</title>
    <link href="http://kwin1113.github.io/passages/Tools/Servlet/Tomcat%E5%AE%B9%E5%99%A8%E7%AD%89%E7%BA%A7/"/>
    <id>http://kwin1113.github.io/passages/Tools/Servlet/Tomcat容器等级/</id>
    <published>2019-02-04T15:44:33.000Z</published>
    <updated>2019-02-04T16:56:05.842Z</updated>
    
    <content type="html"><![CDATA[<!-- 文章的摘要内容 --><a id="more"></a><!-- 文章的正式内容 --><p>Tomcate的容器分为四个等级，Servlet的容器管理Context容器，一个Context对应一个Web工程!<br><a href="1.png">72b9432000240ce54a5302f40c0379da.png</a></p>]]></content>
    
    <summary type="html">
    
      &lt;!-- 文章的摘要内容 --&gt;
    
    </summary>
    
      <category term="Tools" scheme="http://kwin1113.github.io/categories/Tools/"/>
    
      <category term="Servlet" scheme="http://kwin1113.github.io/categories/Tools/Servlet/"/>
    
    
      <category term="Servlet" scheme="http://kwin1113.github.io/tags/Servlet/"/>
    
  </entry>
  
  <entry>
    <title>Servlet</title>
    <link href="http://kwin1113.github.io/passages/Tools/Servlet/Servlet/"/>
    <id>http://kwin1113.github.io/passages/Tools/Servlet/Servlet/</id>
    <published>2019-02-04T15:44:10.000Z</published>
    <updated>2019-02-04T16:56:02.381Z</updated>
    
    <content type="html"><![CDATA[<!-- 文章的摘要内容 --><a id="more"></a><!-- 文章的正式内容 --><h3 id="Servlet是什么？"><a href="#Servlet是什么？" class="headerlink" title="Servlet是什么？"></a>Servlet是什么？</h3><p>&emsp;&emsp;Java Servlet 是运行在 Web 服务器或应用服务器上的程序，它是作为来自 Web 浏览器或其他 HTTP 客户端的请求和 HTTP 服务器上的数据库或应用程序之间的中间层。</p><h3 id="Servlet任务"><a href="#Servlet任务" class="headerlink" title="Servlet任务"></a>Servlet任务</h3><p>Servlet 执行以下主要任务：</p><ul><li>读取客户端（浏览器）发送的显式的数据。这包括网页上的 HTML 表单，或者也可以是来自 applet 或自定义的 HTTP 客户端程序的表单。</li><li>读取客户端（浏览器）发送的隐式的 HTTP 请求数据。这包括 cookies、媒体类型和浏览器能理解的压缩格式等等。</li><li>处理数据并生成结果。这个过程可能需要访问数据库，执行 RMI 或 CORBA 调用，调用 Web 服务，或者直接计算得出对应的响应。</li><li>发送显式的数据（即文档）到客户端（浏览器）。该文档的格式可以是多种多样的，包括文本文件（HTML 或 XML）、二进制文件（GIF 图像）、Excel 等。</li><li>发送隐式的 HTTP 响应到客户端（浏览器）。这包括告诉浏览器或其他客户端被返回的文档类型（例如 HTML），设置 cookies 和缓存参数，以及其他类似的任务。<h3 id="Servlet包"><a href="#Servlet包" class="headerlink" title="Servlet包"></a>Servlet包</h3>&emsp;&emsp;Java Servlet 是运行在带有支持 Java Servlet 规范的解释器的 web 服务器上的 Java 类。Servlet 可以使用 javax.servlet 和 javax.servlet.http 包创建，它是 Java 企业版的标准组成部分，Java 企业版是支持大型开发项目的 Java 类库的扩展版本。<h3 id="Servlet生命周期"><a href="#Servlet生命周期" class="headerlink" title="Servlet生命周期"></a>Servlet生命周期</h3>Servlet 生命周期可被定义为从创建直到毁灭的整个过程。以下是 Servlet 遵循的过程：</li><li>Servlet 通过调用 init () 方法进行初始化。</li><li>Servlet 调用 service() 方法来处理客户端的请求。</li><li>Servlet 通过调用 destroy() 方法终止（结束）。</li><li>最后，Servlet 是由 JVM 的垃圾回收器进行垃圾回收的。<h3 id="编写一个Servlet"><a href="#编写一个Servlet" class="headerlink" title="编写一个Servlet"></a>编写一个Servlet</h3></li></ul><p>1.继承HttpServlet<br>2.重写doGet()或doPost()<br>3.在web.xml中注册Servlet</p><p>MyEclipseb编写Servlet<br>1.src -&gt; new -&gt; Servlet<br>2.重写doGet()或doPost()<br>3.部署运行</p><h3 id="Servlet容器装载Servlet"><a href="#Servlet容器装载Servlet" class="headerlink" title="Servlet容器装载Servlet"></a>Servlet容器装载Servlet</h3><p>在下列时刻Servlet容器装载Servlet：<br>Servlet容器启动时自动装载某些Servlet，实现它只需要在web.xml文件中的<servlet></servlet>之间添加如下代码：</p><p><load-on-startup>1</load-on-startup><br>数字越小表示优先级越高</p><p>在Servlet容器启动后，客户首次向Servlet发送请求</p><p>Servlet类文件被更新后，重新装载Servlet</p><h3 id="Servlet与JSP内置对象的对应关系"><a href="#Servlet与JSP内置对象的对应关系" class="headerlink" title="Servlet与JSP内置对象的对应关系"></a>Servlet与JSP内置对象的对应关系</h3><p><img src="/passages/Tools/Servlet/Servlet/1.png" alt="565cb40f85167f23b421e739d86ccb94.png"></p><h3 id="路径跳转"><a href="#路径跳转" class="headerlink" title="路径跳转"></a>路径跳转</h3><p>绝对路径<br>相对路径</p><p>重定向：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">response.sendRedirect(request.getContextPath()+<span class="string">"test.jsp"</span>);</span><br></pre></td></tr></table></figure></p><p>服务器内部跳转：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//这里的斜线表示项目的根目录</span></span><br><span class="line">request.getRequestDispatcher(<span class="string">"/test.jsp"</span>).forward(request,response);</span><br><span class="line"><span class="comment">//..表示回到上一层目录</span></span><br><span class="line">request.getRequestDispatcher(<span class="string">"../test.jsp"</span>).forward(request,response);</span><br></pre></td></tr></table></figure></p><h3 id="获取初始化参数"><a href="#获取初始化参数" class="headerlink" title="获取初始化参数"></a>获取初始化参数</h3><p>在web.xml中配置Servlet时，可以配置一些初始化参数。而在Servlet中可以通过ServletConfig接口提供的方法来获取这些参数。</p><h3 id="Model1简介"><a href="#Model1简介" class="headerlink" title="Model1简介"></a>Model1简介</h3><p><img src="/passages/Tools/Servlet/Servlet/2.png" alt="f88bdf942d20ab8d2f47841e22fb01ca.png"></p><h3 id="Model2简介"><a href="#Model2简介" class="headerlink" title="Model2简介"></a>Model2简介</h3><p>Java Web的Model2开发模型就是MVC思想的体现<br><img src="/passages/Tools/Servlet/Servlet/3.png" alt="692a967878ac8f7dc3fa59f021988093.png"></p>]]></content>
    
    <summary type="html">
    
      &lt;!-- 文章的摘要内容 --&gt;
    
    </summary>
    
      <category term="Tools" scheme="http://kwin1113.github.io/categories/Tools/"/>
    
      <category term="Servlet" scheme="http://kwin1113.github.io/categories/Tools/Servlet/"/>
    
    
      <category term="Servlet" scheme="http://kwin1113.github.io/tags/Servlet/"/>
    
  </entry>
  
  <entry>
    <title>Redis的数据结构</title>
    <link href="http://kwin1113.github.io/passages/Tools/Redis/Redis%E7%9A%84%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    <id>http://kwin1113.github.io/passages/Tools/Redis/Redis的数据结构/</id>
    <published>2019-02-04T15:43:04.000Z</published>
    <updated>2019-02-04T16:55:54.074Z</updated>
    
    <content type="html"><![CDATA[<!-- 文章的摘要内容 --><a id="more"></a><!-- 文章的正式内容 --><h3 id="五种数据类型："><a href="#五种数据类型：" class="headerlink" title="五种数据类型："></a>五种数据类型：</h3><ul><li>字符串（String）</li><li>哈希（Hash）</li><li>字符串列表（List）</li><li>字符串集合（Set）</li><li>有序字符串集合（sorted set）</li></ul><h3 id="Key定义的注意点"><a href="#Key定义的注意点" class="headerlink" title="Key定义的注意点"></a>Key定义的注意点</h3><ul><li>不要过长</li><li>不要过短</li><li>统一的命名规范</li></ul><h3 id="存储String"><a href="#存储String" class="headerlink" title="存储String"></a>存储String</h3><ul><li>二进制安全的，存入和获取的数据相同</li><li>Value最多可以容纳的数据长度是512M<h4 id="存储String常用命令"><a href="#存储String常用命令" class="headerlink" title="存储String常用命令"></a>存储String常用命令</h4></li><li>赋值取值：set、get、getset</li><li>删除：del</li><li>数值增减：incr、decr、incrby、decrby</li><li>扩展命令：append<br><img src="/passages/Tools/Redis/Redis的数据结构/1.png" alt="0836bcd80456855d221dbcdc69d3babd.png"><br><img src="/passages/Tools/Redis/Redis的数据结构/2.png" alt="c39e9cb895dd5e0590f2a1f893da9450.png"><h3 id="存储Hash"><a href="#存储Hash" class="headerlink" title="存储Hash"></a>存储Hash</h3></li><li>String Key和String Value的map容器</li><li>每一个Hash可以存储4294967295个键值对<h4 id="存储Hash常用命令"><a href="#存储Hash常用命令" class="headerlink" title="存储Hash常用命令"></a>存储Hash常用命令</h4></li><li>赋值取值：hset、hget、hmset、hmget、hgetall</li><li>删除：del、hdel</li><li>自学命令：hexists、hlen、hkeys、hvals<br><img src="/passages/Tools/Redis/Redis的数据结构/3.png" alt="f93ba168be712d6757e8fae9b643085a.png"><br><img src="/passages/Tools/Redis/Redis的数据结构/4.png" alt="1c1ac4e5acbb4727efc68d75d6b28557.png"><h3 id="存储List"><a href="#存储List" class="headerlink" title="存储List"></a>存储List</h3></li><li>ArrayList使用数组方式</li><li>LinkedList使用双向链接方式</li><li>双向链表中增加数据</li><li>双向链表中删除数据<h4 id="存储List常用命令"><a href="#存储List常用命令" class="headerlink" title="存储List常用命令"></a>存储List常用命令</h4></li><li>两端添加、弹出：hpush、rpush、lpop、rpop、lpushx、rpoplpush</li><li>查看列表：lrange</li><li>获取列表元素个数：llen</li><li>扩展命令：lrem、linsert (before)(after)<br><img src="/passages/Tools/Redis/Redis的数据结构/5.png" alt="a80a5bcbea4390e2d8514ad93cc6e447.png"><br><img src="/passages/Tools/Redis/Redis的数据结构/6.png" alt="d6d69283136965e21865745c663c46a6.png"><br><img src="/passages/Tools/Redis/Redis的数据结构/7.png" alt="484244f1a03ab048367709b10bcda24e.png"><br><img src="/passages/Tools/Redis/Redis的数据结构/8.png" alt="d79d97782c0f8d013217c93211c5e7bf.png"><br><img src="/passages/Tools/Redis/Redis的数据结构/9.png" alt="858b6f082f21987bf1bf862ec659167c.png"><br><img src="/passages/Tools/Redis/Redis的数据结构/10.png" alt="f9f8716f3674cf8b5afc923fe2f6f8df.png"><br><img src="/passages/Tools/Redis/Redis的数据结构/11.png" alt="7969ea95dc3366a48990e063e1cbec63.png"><br><img src="/passages/Tools/Redis/Redis的数据结构/12.png" alt="280c7681d6fd7c8b52104e010355b48f.png"><h3 id="存储Set"><a href="#存储Set" class="headerlink" title="存储Set"></a>存储Set</h3></li><li>和List类型不同的是，Set集合中不允许出现重复的元素</li><li>Set可包含的最大元素数量是4294967295<h4 id="存储set常用命令"><a href="#存储set常用命令" class="headerlink" title="存储set常用命令"></a>存储set常用命令</h4></li><li>添加删除元素：sadd、srem、</li><li>获得集合中的元素：smembers、sismembers</li><li>集合中的差集运算：sdiff</li><li>集合中的交集运算：sinter</li><li>集合中的并集运算：sunion</li><li>扩展命令：scard、srandmember、sdiffstore、sinterstore、sunionstore<br><img src="/passages/Tools/Redis/Redis的数据结构/13.png" alt="d756ffa784034432c85efaae3742b8a4.png"><br><img src="/passages/Tools/Redis/Redis的数据结构/14.png" alt="6f088e987618e9c3e713d5889c3ea343.png"><br><img src="/passages/Tools/Redis/Redis的数据结构/15.png" alt="deb391986de4ae9fe97ab2adcdcc072d.png"><h4 id="存储Set使用场景"><a href="#存储Set使用场景" class="headerlink" title="存储Set使用场景"></a>存储Set使用场景</h4></li><li>跟踪一些唯一性数据</li><li>用于维护数据对象之间的关联关系<h3 id="存储Sorted-Set"><a href="#存储Sorted-Set" class="headerlink" title="存储Sorted-Set"></a>存储Sorted-Set</h3></li><li>Sorted-Set和Set的区别</li><li>Sorted-Set中的成员在集合中的位置是有序的<h4 id="存储Sorted-Set常用命令"><a href="#存储Sorted-Set常用命令" class="headerlink" title="存储Sorted-Set常用命令"></a>存储Sorted-Set常用命令</h4></li><li>添加元素、删除元素：zadd、zrem</li><li>获得元素：zscore</li><li>范围查询：zrange withscores、zrevrange withscores</li><li>扩展命令：zcard、zremrangebyrank、zremrangebyscore limit、zcount<br><img src="/passages/Tools/Redis/Redis的数据结构/16.png" alt="80c3ee0abd4234ed7a35a1edb4d6a93d.png"><br><img src="/passages/Tools/Redis/Redis的数据结构/17.png" alt="9160833a2331aed9b5e1920c8ba2b974.png"><br><img src="/passages/Tools/Redis/Redis的数据结构/18.png" alt="ecd812add1c1570b28031a41334e4da1.png"><h4 id="Sorted-Set使用场景"><a href="#Sorted-Set使用场景" class="headerlink" title="Sorted-Set使用场景"></a>Sorted-Set使用场景</h4></li><li>如大型在线游戏积分排行榜</li><li>构建索引数据</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;!-- 文章的摘要内容 --&gt;
    
    </summary>
    
      <category term="Tools" scheme="http://kwin1113.github.io/categories/Tools/"/>
    
      <category term="Redis(持更...)" scheme="http://kwin1113.github.io/categories/Tools/Redis-%E6%8C%81%E6%9B%B4/"/>
    
    
      <category term="Redis" scheme="http://kwin1113.github.io/tags/Redis/"/>
    
  </entry>
  
  <entry>
    <title>NoSQL、Redis、Jedis</title>
    <link href="http://kwin1113.github.io/passages/Tools/Redis/NoSQL%E3%80%81Redis%E3%80%81Jedis/"/>
    <id>http://kwin1113.github.io/passages/Tools/Redis/NoSQL、Redis、Jedis/</id>
    <published>2019-02-04T15:42:33.000Z</published>
    <updated>2019-02-04T16:55:50.640Z</updated>
    
    <content type="html"><![CDATA[<!-- 文章的摘要内容 --><a id="more"></a><!-- 文章的正式内容 --><h3 id="NoSQL"><a href="#NoSQL" class="headerlink" title="NoSQL"></a>NoSQL</h3><ul><li>NoSQL=Not Only SQL</li><li>非关系型的数据库</li><li>High performance - 高并发读写</li><li>Huge Storage - 海量数据的高效率存储和访问</li><li>High Scalability &amp;&amp; High Availability - 高可扩展性和高可用性<h4 id="NoSQL数据的四大分类"><a href="#NoSQL数据的四大分类" class="headerlink" title="NoSQL数据的四大分类"></a>NoSQL数据的四大分类</h4></li><li>键值存储</li><li>列存储</li><li>文档数据库</li><li>图形数据库</li></ul><table><thead><tr><th>分类</th><th>相关产品</th><th>典型应用</th><th>数据模型</th><th>优点</th><th>缺点</th></tr></thead><tbody><tr><td>键值</td><td>Tokto Cabinet/Tyrant、Redis、Voldemort、Berkeley DB</td><td>内容缓存、主要用于处理大量数据的高访问负载</td><td>一系列键值对</td><td>快速查询</td><td>存储的数据缺少结构化</td></tr><tr><td>列存储数据库</td><td>Cassandra、HBase、Riak</td><td>分布式的文件系统</td><td>以列簇式存储，将同一列数据存在一起</td><td>查找速度快，可扩展性强，更容易进行分布式扩展</td><td>功能相对局限</td></tr><tr><td>文档型数据库</td><td>CouchDB、MongoDB</td><td>Web应用</td><td>一系列键值对</td><td>数据结构要求不严格</td><td>查询性能不强，而且缺乏统一的查询语法</td></tr><tr><td>图形数据库</td><td>Neo4J、InfoGrid、Infinite Graph</td><td>社交网络，推荐系统等。专注于构建关系图谱</td><td>图结构</td><td>利用图结构相关算法</td><td>需要对整个图做计算才能得出结果，不容易做分布式的集群方案</td></tr></tbody></table><h4 id="NoSQL的特点"><a href="#NoSQL的特点" class="headerlink" title="NoSQL的特点"></a>NoSQL的特点</h4><ul><li>易扩展</li><li>大数据量，高性能</li><li>灵活的数据模型</li><li><p>高可用</p><h3 id="Redis"><a href="#Redis" class="headerlink" title="Redis"></a>Redis</h3><h4 id="Redis概述"><a href="#Redis概述" class="headerlink" title="Redis概述"></a>Redis概述</h4><p>高性能键值对数据库，支持的键值数据类型：</p></li><li><p>字符串类型</p></li><li>散列类型</li><li>列表类型</li><li>集合类型</li><li>有序集合类型<h4 id="Redis的应用场景"><a href="#Redis的应用场景" class="headerlink" title="Redis的应用场景"></a>Redis的应用场景</h4></li><li>缓存</li><li>任务队列</li><li>应用排行榜</li><li>网站访问统计</li><li>数据过期处理</li><li>分布式集群架构中的session分离<h3 id="Jedis"><a href="#Jedis" class="headerlink" title="Jedis"></a>Jedis</h3>引入Jedis的jar包<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.kwin.Jedis;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"><span class="keyword">import</span> redis.clients.jedis.Jedis;</span><br><span class="line"><span class="keyword">import</span> redis.clients.jedis.JedisPool;</span><br><span class="line"><span class="keyword">import</span> redis.clients.jedis.JedisPoolConfig;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.junit.Assert.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JedisTestTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 单例例子</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">demo1</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Jedis jedis = <span class="keyword">new</span> Jedis(<span class="string">"192.168.200.25"</span>, <span class="number">6379</span>);</span><br><span class="line"></span><br><span class="line">        jedis.set(<span class="string">"name"</span>, <span class="string">"kwin"</span>);</span><br><span class="line"></span><br><span class="line">        System.out.println(jedis.get(<span class="string">"name"</span>));</span><br><span class="line"></span><br><span class="line">        jedis.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 使用连接池</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">demo2</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        JedisPoolConfig config = <span class="keyword">new</span> JedisPoolConfig();</span><br><span class="line"></span><br><span class="line">        config.setMaxTotal(<span class="number">30</span>);</span><br><span class="line">        config.setMaxIdle(<span class="number">30</span>);</span><br><span class="line"></span><br><span class="line">        JedisPool jedisPool = <span class="keyword">new</span> JedisPool(config, <span class="string">"192.168.200.25"</span>, <span class="number">6379</span>);</span><br><span class="line"></span><br><span class="line">        Jedis jedis = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            jedis = jedisPool.getResource();</span><br><span class="line">            jedis.set(<span class="string">"name"</span>, <span class="string">"kk"</span>);</span><br><span class="line">            String value = jedis.get(<span class="string">"name"</span>);</span><br><span class="line">            System.out.println(value);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">null</span> != jedis) &#123;</span><br><span class="line">                jedis.close();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">null</span> != jedisPool) &#123;</span><br><span class="line">                jedisPool.close();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;!-- 文章的摘要内容 --&gt;
    
    </summary>
    
      <category term="Tools" scheme="http://kwin1113.github.io/categories/Tools/"/>
    
      <category term="Redis(持更...)" scheme="http://kwin1113.github.io/categories/Tools/Redis-%E6%8C%81%E6%9B%B4/"/>
    
    
      <category term="Redis" scheme="http://kwin1113.github.io/tags/Redis/"/>
    
  </entry>
  
  <entry>
    <title>Maven</title>
    <link href="http://kwin1113.github.io/passages/Tools/Maven/Maven/"/>
    <id>http://kwin1113.github.io/passages/Tools/Maven/Maven/</id>
    <published>2019-02-04T15:41:52.000Z</published>
    <updated>2019-02-04T16:55:41.798Z</updated>
    
    <content type="html"><![CDATA[<!-- 文章的摘要内容 --><a id="more"></a><!-- 文章的正式内容 --><h3 id="Maven介绍及环境搭建"><a href="#Maven介绍及环境搭建" class="headerlink" title="Maven介绍及环境搭建"></a>Maven介绍及环境搭建</h3><p>Maven是基于项目对象模型（POM），可以通过一小段描述信息来管理项目的构建、报告和文档的软件项目管理工具<br>maven项目结构<br>src<br>        -main<br>         .      -java<br>         .              -package<br>        -test<br>          .     -java<br>          .              -package<br>        -resources</p><h3 id="Maven的常见命令"><a href="#Maven的常见命令" class="headerlink" title="Maven的常见命令"></a>Maven的常见命令</h3><p>mvn -v 查看maven版本<br>        compile 编译<br>        test 测试<br>        package 打包<br>        clean 删除target<br>        install 安装jar包到本地仓库中</p><pre><code>创建目录的两种方式：1.archetype:generate 按照提示进行选择2.archetype：generate -DgroupId=组织名，公司地址的反写+项目名                                    -DartifactId=项目名-模块名                                    -Dversion=版本号                                    -Dpackage=代码所存在的包名</code></pre><p>坐标<br>        构件<br>仓库<br>        本地仓库和远程仓库<br>镜像仓库</p><p>完整的项目构建过程包括：<br>清理、编译、测试、打包、集成测试、验证、部署<br>clean、compile、test、package、install</p><h3 id="Maven的生命周期"><a href="#Maven的生命周期" class="headerlink" title="Maven的生命周期"></a>Maven的生命周期</h3><p>clean    清理项目<br>                            pre-clean   执行清理前的工作<br>                            clean         清理上一次构建生成的所有文件<br>                            post-clean 执行清理后的文件<br>default  构建项目（最核心）<br>                            compile    test    package    install<br>site        生成项目站点<br>                            pre-site      在生成项目站点前要完成的工作<br>                            site            生成项目的站点文档<br>                            post-site    在生成项目站点后要完成的工作<br>                            site-deploy发布生成的站点到服务器上</p><h3 id="pom-xml常用元素"><a href="#pom-xml常用元素" class="headerlink" title="pom.xml常用元素"></a>pom.xml常用元素</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 指定了当前pom的版本 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 坐标 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span><span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span><span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 第一个0表示大版本号</span></span><br><span class="line"><span class="comment">     第二个0表示分支版本号</span></span><br><span class="line"><span class="comment">     第三个0表示小版本号</span></span><br><span class="line"><span class="comment">     0.0.1</span></span><br><span class="line"><span class="comment">     snapshot快照</span></span><br><span class="line"><span class="comment">     alpha内部测试</span></span><br><span class="line"><span class="comment">     beta公测</span></span><br><span class="line"><span class="comment">     Release稳定</span></span><br><span class="line"><span class="comment">     GA正式发布</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span><span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 打包方式</span></span><br><span class="line"><span class="comment">     默认是jar</span></span><br><span class="line"><span class="comment">     war zip pom</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">packaging</span>&gt;</span><span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 项目描述名 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span><span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 项目地址 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">url</span>&gt;</span><span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 项目描述 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">description</span>&gt;</span><span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 开发人员 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">developers</span>&gt;</span><span class="tag">&lt;/<span class="name">developers</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 许可证 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">licenses</span>&gt;</span><span class="tag">&lt;/<span class="name">licenses</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 组织信息 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">organization</span>&gt;</span><span class="tag">&lt;/<span class="name">organization</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span><span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span><span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span><span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">type</span>&gt;</span><span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span><span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 设置依赖是否可选 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">optional</span>&gt;</span><span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 排除依赖传递列表 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 依赖的管理 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 插件列表 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span><span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span><span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span><span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 继承 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span><span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">modules</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">module</span>&gt;</span><span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">modules</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="依赖的范围"><a href="#依赖的范围" class="headerlink" title="依赖的范围"></a>依赖的范围</h3><p>compile：默认<br>provided：在编译和测试时有效<br>runtime：在测试和运行时有效<br>test：只在测试时有效<br>system：与本机系统相关联，可移植性差<br>import：导入的范围，它只使用在dependencyManagement中，表示从其他的pom中导入dependency的配置</p><h3 id="Maven依赖传递"><a href="#Maven依赖传递" class="headerlink" title="Maven依赖传递"></a>Maven依赖传递</h3><p>通过<dependency>引入依赖<br>通过<exclusions><exclusion>排除依赖</exclusion></exclusions></dependency></p><h3 id="依赖冲突"><a href="#依赖冲突" class="headerlink" title="依赖冲突"></a>依赖冲突</h3><p>1.短路优先<br>2.如果路径长度相同，先声明优先</p><h3 id="聚合和继承"><a href="#聚合和继承" class="headerlink" title="聚合和继承"></a>聚合和继承</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 聚合 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">modules</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">module</span>&gt;</span><span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">modules</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 依赖的管理 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 继承 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span><span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;!-- 文章的摘要内容 --&gt;
    
    </summary>
    
      <category term="Tools" scheme="http://kwin1113.github.io/categories/Tools/"/>
    
      <category term="Maven" scheme="http://kwin1113.github.io/categories/Tools/Maven/"/>
    
    
      <category term="Maven" scheme="http://kwin1113.github.io/tags/Maven/"/>
    
  </entry>
  
  <entry>
    <title>Junit4</title>
    <link href="http://kwin1113.github.io/passages/Tools/Junit4/Junit4/"/>
    <id>http://kwin1113.github.io/passages/Tools/Junit4/Junit4/</id>
    <published>2019-02-04T15:41:09.000Z</published>
    <updated>2019-02-04T16:55:35.862Z</updated>
    
    <content type="html"><![CDATA[<!-- 文章的摘要内容 --><a id="more"></a><!-- 文章的正式内容 --><p>1、测试方法上必须使用@Test进行修饰<br>2、测试方法必须使用public void进行修饰，不能带任何的参数<br>3、新建一个源代码目录来存放我们的测试代码<br>4、测试类的包应该和被测试类保持一致<br>5、测试单元中的每个方法必须可以独立测试，测试方法间不能由任何的依赖<br>6、测试类使用Test作为类名的后缀（不是必须）<br>7、测试方法使用test作为方法名的前缀（不是必须）</p><p>1、Failure一般由单元测试使用的断言方法判断失败所引起的，这表示测试点发现了问题，就是说程序输出的结果和我们预期的不一样<br>2、error是由代码异常引起的，它可以产生于测试代码本身的错误，也可以是被测试代码中的一个隐藏bug<br>3、测试用例不是用来证明你是对的，而是用来证明你没有错。</p><p>1、@BeforeClass修饰的方法会在所有方法被调用前被执行，而且该方法是静态的，所以当测试类被加载后接着就会运行它，而且在内存中它只会存在一份实例，它比较适合加载配置文件。<br>2、@AfterClass所修饰的方法通常用来对资源的清理，如关闭数据库的连接<br>3、@Before和@After会在每个测试方法的前后各执行一次</p><p>@Test：将一个普通的方法修饰成为一个测试方法<br>    @Test(expected=XX.class)<br>    @Test(timeout=毫秒)<br>@BeforeClass：它会在所有的方法运行前被执行，static修饰<br>@AfterClass：它会在所有的方法运行结束后被执行，static修饰<br>@Before：会在每一个测试方法被运行前执行一次<br>@After：会在每一个测试方法运行后被执行一次<br>@Ignore：所修饰的测试方法会被测试运行器忽略<br>@RunWith：可以更改测试运行器org.junit.runner.Runner</p><p>测试套件就是组织测试类一起运行的</p><p>写一个作为测试套件的入口类，这个类里不包含其他的方法<br>更改测试运行器Suite.class<br>将要测试的类作为数组传入到Suite.SuiteClasses({ })</p><p>1、更改默认的测试运行期为RunWith(Parameterized.class)<br>2、声明变量来存放预期值和结果值<br>3、声明一个返回值为Collection的公共静态方法，并使用@Parameters进行修饰<br>4、为测试类声明一个带有参数的公共构造函数，并在其中为之声明变量<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RunWith</span>(Parameterized.class)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ParameterTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> excepted = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> input1 = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> input2 = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Parameterized</span>.Parameters</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Collection&lt;Object[]&gt; t() &#123;</span><br><span class="line">        <span class="keyword">return</span> Arrays.asList(<span class="keyword">new</span> Object[][]&#123;</span><br><span class="line">                &#123;<span class="number">3</span>,<span class="number">1</span>,<span class="number">2</span>&#125;,</span><br><span class="line">                &#123;<span class="number">4</span>,<span class="number">2</span>,<span class="number">2</span>&#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ParameterTest</span><span class="params">(<span class="keyword">int</span> excepted, <span class="keyword">int</span> input1, <span class="keyword">int</span> input2)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.excepted = excepted;</span><br><span class="line">        <span class="keyword">this</span>.input1 = input1;</span><br><span class="line">        <span class="keyword">this</span>.input2 = input2;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testAdd</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        assertEquals(excepted, <span class="keyword">new</span> Calculate().add(input1, input2));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;!-- 文章的摘要内容 --&gt;
    
    </summary>
    
      <category term="Tools" scheme="http://kwin1113.github.io/categories/Tools/"/>
    
      <category term="Junit4" scheme="http://kwin1113.github.io/categories/Tools/Junit4/"/>
    
    
      <category term="Junit4" scheme="http://kwin1113.github.io/tags/Junit4/"/>
    
  </entry>
  
  <entry>
    <title>Spring JMS</title>
    <link href="http://kwin1113.github.io/passages/Tools/Java%E6%B6%88%E6%81%AF%E4%B8%AD%E9%97%B4%E4%BB%B6/Spring-JMS/"/>
    <id>http://kwin1113.github.io/passages/Tools/Java消息中间件/Spring-JMS/</id>
    <published>2019-02-04T15:40:25.000Z</published>
    <updated>2019-02-04T16:55:22.874Z</updated>
    
    <content type="html"><![CDATA[<!-- 文章的摘要内容 --><a id="more"></a><!-- 文章的正式内容 --><h3 id="使用Spring集成JMS连接ActiveMQ"><a href="#使用Spring集成JMS连接ActiveMQ" class="headerlink" title="使用Spring集成JMS连接ActiveMQ"></a>使用Spring集成JMS连接ActiveMQ</h3><ul><li>ConnectionFactory：用于管理连接的连接工厂</li><li>JmsTemplate：用于发送和接收消息的模板类</li><li>MessageListener：消息监听器<h4 id="ConnectionFactory"><a href="#ConnectionFactory" class="headerlink" title="ConnectionFactory"></a>ConnectionFactory</h4></li><li>一个Spring为我们提供的连接池</li><li>JmsTemplate每次发消息都会重新创建连接，会话和productor</li><li>spring中提供了SingleConnectionFactory和CachingConnectionFactory<h4 id="JmsTemplate"><a href="#JmsTemplate" class="headerlink" title="JmsTemplate"></a>JmsTemplate</h4></li><li>是spring提供的，只需向spring容器中注册这个类就可以使用JmsTemplate方便的操作jms</li><li>JmsTemplate类是线程安全的，可以在整个应用范围使用<h4 id="MessageListener"><a href="#MessageListener" class="headerlink" title="MessageListener"></a>MessageListener</h4></li><li>实现一个onMessage方法，该方法只接收一个Messgae参数。<br><img src="/passages/Tools/Java消息中间件/Spring-JMS/1.png" alt="a8248bacfdd7cdbfa27755c2c53aca50.png"><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/context/spring-context.xsd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:annotation-config</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--ActiveMQ为我们提供的ConnectionFactory--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"targetConnectionFactory"</span> <span class="attr">class</span>=<span class="string">"org.apache.activemq.spring.ActiveMQConnectionFactory"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"brokerURL"</span> <span class="attr">value</span>=<span class="string">"tcp://192.168.200.25:61616"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--Spring jms为我们提供连接池--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"connectionFactory"</span> <span class="attr">class</span>=<span class="string">"org.springframework.jms.connection.SingleConnectionFactory"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"targetConnectionFactory"</span> <span class="attr">ref</span>=<span class="string">"targetConnectionFactory"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--一个队列目的地，点对点的--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"queueDestination"</span> <span class="attr">class</span>=<span class="string">"org.apache.activemq.command.ActiveMQQueue"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">value</span>=<span class="string">"queue"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"topicDestination"</span> <span class="attr">class</span>=<span class="string">"org.apache.activemq.command.ActiveMQTopic"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">value</span>=<span class="string">"topic"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--导入公共配置--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">import</span> <span class="attr">resource</span>=<span class="string">"common.xml"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--配置消息监听器--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"consumerMessageListener"</span> <span class="attr">class</span>=<span class="string">"com.kwin.jms.consumer.ConsumerMessageListener"</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--配置消息监听容器--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"jmsContainer"</span> <span class="attr">class</span>=<span class="string">"org.springframework.jms.listener.DefaultMessageListenerContainer"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"connectionFactory"</span> <span class="attr">ref</span>=<span class="string">"connectionFactory"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"destination"</span> <span class="attr">ref</span>=<span class="string">"queueDestination"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"messageListener"</span> <span class="attr">ref</span>=<span class="string">"consumerMessageListener"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/beans/spring-beans.xsd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">import</span> <span class="attr">resource</span>=<span class="string">"common.xml"</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--配置jmsTemplate，用来发送消息--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"jmsTemplate"</span> <span class="attr">class</span>=<span class="string">"org.springframework.jms.core.JmsTemplate"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"connectionFactory"</span> <span class="attr">ref</span>=<span class="string">"connectionFactory"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"com.kwin.jms.producer.ProducerServiceImpl"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.kwin.jms.consumer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.support.ClassPathXmlApplicationContext;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AppConsumer</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        ApplicationContext context = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">"consumer.xml"</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.kwin.jms.consumer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.jms.JMSException;</span><br><span class="line"><span class="keyword">import</span> javax.jms.Message;</span><br><span class="line"><span class="keyword">import</span> javax.jms.MessageListener;</span><br><span class="line"><span class="keyword">import</span> javax.jms.TextMessage;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ConsumerMessageListener</span> <span class="keyword">implements</span> <span class="title">MessageListener</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onMessage</span><span class="params">(Message message)</span> </span>&#123;</span><br><span class="line">        TextMessage textMessage = (TextMessage) message;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">"接受消息"</span> + textMessage.getText());</span><br><span class="line">        &#125; <span class="keyword">catch</span> (JMSException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.kwin.jms.producer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.support.ClassPathXmlApplicationContext;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AppProducer</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        ApplicationContext context = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">"producer.xml"</span>);</span><br><span class="line">        ProducerService service = context.getBean(ProducerService.class);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100</span>; i++) &#123;</span><br><span class="line">            service.sendMessage(<span class="string">"test"</span> + i);</span><br><span class="line">        &#125;</span><br><span class="line">        ((ClassPathXmlApplicationContext) context).close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.kwin.jms.producer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">ProducerService</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">sendMessage</span><span class="params">(String message)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.kwin.jms.producer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.jms.core.JmsTemplate;</span><br><span class="line"><span class="keyword">import</span> org.springframework.jms.core.MessageCreator;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.annotation.Resource;</span><br><span class="line"><span class="keyword">import</span> javax.jms.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ProducerServiceImpl</span> <span class="keyword">implements</span> <span class="title">ProducerService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    JmsTemplate jmsTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span>(name = <span class="string">"queueDestination"</span>)</span><br><span class="line">    Destination destination;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sendMessage</span><span class="params">(<span class="keyword">final</span> String message)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//使用JmsTemplate发送消息</span></span><br><span class="line">        jmsTemplate.send(destination, <span class="keyword">new</span> MessageCreator() &#123;</span><br><span class="line">            <span class="comment">//创建一个消息</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> Message <span class="title">createMessage</span><span class="params">(Session session)</span> <span class="keyword">throws</span> JMSException </span>&#123;</span><br><span class="line">                TextMessage textMessage = session.createTextMessage(message);</span><br><span class="line">                <span class="keyword">return</span> textMessage;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        System.out.println(<span class="string">"发送消息"</span> + message);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Topic模式方法类似</p>]]></content>
    
    <summary type="html">
    
      &lt;!-- 文章的摘要内容 --&gt;
    
    </summary>
    
      <category term="Tools" scheme="http://kwin1113.github.io/categories/Tools/"/>
    
      <category term="Java消息中间件" scheme="http://kwin1113.github.io/categories/Tools/Java%E6%B6%88%E6%81%AF%E4%B8%AD%E9%97%B4%E4%BB%B6/"/>
    
    
      <category term="Java消息中间件" scheme="http://kwin1113.github.io/tags/Java%E6%B6%88%E6%81%AF%E4%B8%AD%E9%97%B4%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>ActiveMQ</title>
    <link href="http://kwin1113.github.io/passages/Tools/Java%E6%B6%88%E6%81%AF%E4%B8%AD%E9%97%B4%E4%BB%B6/ActiveMQ/"/>
    <id>http://kwin1113.github.io/passages/Tools/Java消息中间件/ActiveMQ/</id>
    <published>2019-02-04T15:40:05.000Z</published>
    <updated>2019-02-04T16:55:19.487Z</updated>
    
    <content type="html"><![CDATA[<!-- 文章的摘要内容 --><a id="more"></a><!-- 文章的正式内容 --><h3 id="使用JMS接口规范连接ActiveMQ"><a href="#使用JMS接口规范连接ActiveMQ" class="headerlink" title="使用JMS接口规范连接ActiveMQ"></a>使用JMS接口规范连接ActiveMQ</h3><ul><li>创建生产者</li><li>创建消费者</li><li>创建发布者</li><li>创建订阅者<h3 id="队列模式"><a href="#队列模式" class="headerlink" title="队列模式"></a>队列模式</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.kwin.jms.queue;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.activemq.ActiveMQConnectionFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.jms.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AppProducer</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String url = <span class="string">"tcp://192.168.200.25:61616"</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String queueName = <span class="string">"queue-test"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> JMSException </span>&#123;</span><br><span class="line">        <span class="comment">//1.创建ConnectionFactory</span></span><br><span class="line">        ConnectionFactory connectionFactory = <span class="keyword">new</span> ActiveMQConnectionFactory(url);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//2.创建Connection</span></span><br><span class="line">        Connection connection = connectionFactory.createConnection();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//3.启动连接</span></span><br><span class="line">        connection.start();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//4.创建会话</span></span><br><span class="line">        Session session = connection.createSession(<span class="keyword">false</span>, Session.AUTO_ACKNOWLEDGE);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//5.创建一个目标</span></span><br><span class="line">        Destination destination = session.createQueue(queueName);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//6，创建一个生产者</span></span><br><span class="line">        MessageProducer producer = session.createProducer(destination);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100</span>; i++) &#123;</span><br><span class="line">            <span class="comment">//7.创建消息</span></span><br><span class="line">            TextMessage textMessage = session.createTextMessage(<span class="string">"test"</span> + i);</span><br><span class="line">            <span class="comment">//8.发布消息</span></span><br><span class="line">            producer.send(textMessage);</span><br><span class="line"></span><br><span class="line">            System.out.println(<span class="string">"发送消息"</span> + textMessage.getText());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//9.关闭连接</span></span><br><span class="line">        connection.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.kwin.jms.queue;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.activemq.ActiveMQConnectionFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.jms.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AppConsumer</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String url = <span class="string">"tcp://192.168.200.25:61616"</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String queueName = <span class="string">"queue-test"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> JMSException </span>&#123;</span><br><span class="line">        <span class="comment">//1.创建ConnectionFactory</span></span><br><span class="line">        ConnectionFactory connectionFactory = <span class="keyword">new</span> ActiveMQConnectionFactory(url);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//2.创建Connection</span></span><br><span class="line">        Connection connection = connectionFactory.createConnection();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//3.启动连接</span></span><br><span class="line">        connection.start();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//4.创建会话</span></span><br><span class="line">        Session session = connection.createSession(<span class="keyword">false</span>, Session.AUTO_ACKNOWLEDGE);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//5.创建一个目标</span></span><br><span class="line">        Destination destination = session.createQueue(queueName);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//6，创建一个消费者</span></span><br><span class="line">        MessageConsumer consumer = session.createConsumer(destination);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//7.创建一个监听器</span></span><br><span class="line">        consumer.setMessageListener((<span class="keyword">new</span> MessageListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onMessage</span><span class="params">(Message message)</span> </span>&#123;</span><br><span class="line">                TextMessage textMessage = (TextMessage) message;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    System.out.println(<span class="string">"接受消息"</span> + textMessage.getText());</span><br><span class="line">                &#125; <span class="keyword">catch</span> (JMSException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;));</span><br><span class="line"></span><br><span class="line">        <span class="comment">//9.关闭连接</span></span><br><span class="line">        <span class="comment">//connection.close();</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="主题模式"><a href="#主题模式" class="headerlink" title="主题模式"></a>主题模式</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.kwin.jms.topic;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.activemq.ActiveMQConnectionFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.jms.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AppProducer</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String url = <span class="string">"tcp://192.168.200.25:61616"</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String topicName = <span class="string">"topic-test"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> JMSException </span>&#123;</span><br><span class="line">        <span class="comment">//1.创建ConnectionFactory</span></span><br><span class="line">        ConnectionFactory connectionFactory = <span class="keyword">new</span> ActiveMQConnectionFactory(url);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//2.创建Connection</span></span><br><span class="line">        Connection connection = connectionFactory.createConnection();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//3.启动连接</span></span><br><span class="line">        connection.start();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//4.创建会话</span></span><br><span class="line">        Session session = connection.createSession(<span class="keyword">false</span>, Session.AUTO_ACKNOWLEDGE);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//5.创建一个目标</span></span><br><span class="line">        Destination destination = session.createTopic(topicName);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//6，创建一个生产者</span></span><br><span class="line">        MessageProducer producer = session.createProducer(destination);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100</span>; i++) &#123;</span><br><span class="line">            <span class="comment">//7.创建消息</span></span><br><span class="line">            TextMessage textMessage = session.createTextMessage(<span class="string">"test"</span> + i);</span><br><span class="line">            <span class="comment">//8.发布消息</span></span><br><span class="line">            producer.send(textMessage);</span><br><span class="line"></span><br><span class="line">            System.out.println(<span class="string">"发送消息"</span> + textMessage.getText());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//9.关闭连接</span></span><br><span class="line">        connection.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.kwin.jms.topic;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.activemq.ActiveMQConnectionFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.jms.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AppConsumer</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String url = <span class="string">"tcp://192.168.200.25:61616"</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String topicName = <span class="string">"topic-test"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> JMSException </span>&#123;</span><br><span class="line">        <span class="comment">//1.创建ConnectionFactory</span></span><br><span class="line">        ConnectionFactory connectionFactory = <span class="keyword">new</span> ActiveMQConnectionFactory(url);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//2.创建Connection</span></span><br><span class="line">        Connection connection = connectionFactory.createConnection();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//3.启动连接</span></span><br><span class="line">        connection.start();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//4.创建会话</span></span><br><span class="line">        Session session = connection.createSession(<span class="keyword">false</span>, Session.AUTO_ACKNOWLEDGE);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//5.创建一个目标</span></span><br><span class="line">        Destination destination = session.createTopic(topicName);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//6，创建一个消费者</span></span><br><span class="line">        MessageConsumer consumer = session.createConsumer(destination);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//7.创建一个监听器</span></span><br><span class="line">        consumer.setMessageListener((<span class="keyword">new</span> MessageListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onMessage</span><span class="params">(Message message)</span> </span>&#123;</span><br><span class="line">                TextMessage textMessage = (TextMessage) message;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    System.out.println(<span class="string">"接受消息"</span> + textMessage.getText());</span><br><span class="line">                &#125; <span class="keyword">catch</span> (JMSException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;));</span><br><span class="line"></span><br><span class="line">        <span class="comment">//9.关闭连接</span></span><br><span class="line">        <span class="comment">//connection.close();</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;!-- 文章的摘要内容 --&gt;
    
    </summary>
    
      <category term="Tools" scheme="http://kwin1113.github.io/categories/Tools/"/>
    
      <category term="Java消息中间件" scheme="http://kwin1113.github.io/categories/Tools/Java%E6%B6%88%E6%81%AF%E4%B8%AD%E9%97%B4%E4%BB%B6/"/>
    
    
      <category term="Java消息中间件" scheme="http://kwin1113.github.io/tags/Java%E6%B6%88%E6%81%AF%E4%B8%AD%E9%97%B4%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>消息中间件</title>
    <link href="http://kwin1113.github.io/passages/Tools/Java%E6%B6%88%E6%81%AF%E4%B8%AD%E9%97%B4%E4%BB%B6/%E6%B6%88%E6%81%AF%E4%B8%AD%E9%97%B4%E4%BB%B6/"/>
    <id>http://kwin1113.github.io/passages/Tools/Java消息中间件/消息中间件/</id>
    <published>2019-02-04T15:39:02.000Z</published>
    <updated>2019-02-04T16:55:26.422Z</updated>
    
    <content type="html"><![CDATA[<!-- 文章的摘要内容 --><a id="more"></a><!-- 文章的正式内容 --><h3 id="通过服务调用让其他系统感知事件发生"><a href="#通过服务调用让其他系统感知事件发生" class="headerlink" title="通过服务调用让其他系统感知事件发生"></a>通过服务调用让其他系统感知事件发生</h3><p><img src="/passages/Tools/Java消息中间件/消息中间件/1.png" alt="d16c36aa170784f0f50e43602f61fe63.png"></p><h3 id="通过消息中间件解耦服务调用"><a href="#通过消息中间件解耦服务调用" class="headerlink" title="通过消息中间件解耦服务调用"></a>通过消息中间件解耦服务调用</h3><p><img src="/passages/Tools/Java消息中间件/消息中间件/2.png" alt="d8720e890bc366d740bf396b2d7dcc9c.png"></p><h3 id="消息中间件带来的好处"><a href="#消息中间件带来的好处" class="headerlink" title="消息中间件带来的好处"></a>消息中间件带来的好处</h3><ul><li>解耦</li><li>异步</li><li>横向扩展</li><li>安全可靠</li><li>顺序保证</li><li>……<h3 id="什么是中间件？"><a href="#什么是中间件？" class="headerlink" title="什么是中间件？"></a>什么是中间件？</h3>&emsp;&emsp;非底层操作系统软件，非业务应用软件，不是直接给最终用户使用的，不能直接给用户带来价值的软件统称为中间件。<br>&emsp;&emsp;关注于数据的发送和接受，利用高效可靠的异步消息传递机制集成分布式系统。<h3 id="消息中间件图示"><a href="#消息中间件图示" class="headerlink" title="消息中间件图示"></a>消息中间件图示</h3><img src="/passages/Tools/Java消息中间件/消息中间件/3.png" alt="9414ad5f25996497ae099b2293c2d533.png"><h3 id="什么是JMS？"><a href="#什么是JMS？" class="headerlink" title="什么是JMS？"></a>什么是JMS？</h3>&emsp;&emsp;Java消息服务（Java Message Service）即JMS，是一个Java平台中关于面向消息中间件的API，用于在两个应用程序之间，或分布式系统中发送消息，进行异步通信。<h3 id="什么是AMQP？"><a href="#什么是AMQP？" class="headerlink" title="什么是AMQP？"></a>什么是AMQP？</h3>&emsp;&emsp;AMQP（Advanced Message Queuing Protocol）是一个提供统一消息服务的应用层标准协议，基于此协议的客户端与消息中间件可传递消息，并不受客户端/中间件不同产品，不同开发语言等条件的限制。<h3 id="JMS与AMQP对比"><a href="#JMS与AMQP对比" class="headerlink" title="JMS与AMQP对比"></a>JMS与AMQP对比</h3></li></ul><table><thead><tr><th></th><th>JMS规范</th><th>AMQP协议</th></tr></thead><tbody><tr><td>定义</td><td>Java API</td><td>Wire-protocol</td></tr><tr><td>跨语言</td><td>否</td><td>是</td></tr><tr><td>消息模型</td><td>提供两种消息模型：p2p，pub/sub</td><td>提供了五种消息模型：direct，fanout，topic，headers，system</td></tr><tr><td>消息类型</td><td>TextMessage，MapMessage，BytesMessage，StreamMessage，ObjectMessage，Message</td><td>byte[]</td></tr><tr><td>综合评价</td><td>JMS定义了Java API层面的标准；在Java体系中，多个client均可以通过JMS进行交互，不需要应用修改代码，但是其对跨平台的支持较差</td><td>AMQP的主要特征是面向消息、队列、路由（包括点对点和发布/订阅）、可靠性、安全</td></tr></tbody></table><h3 id="ActiveMQ特性"><a href="#ActiveMQ特性" class="headerlink" title="ActiveMQ特性"></a>ActiveMQ特性</h3><ul><li>多种语言和协议编写客户端。语言：Java、C、C++、C#、Ruby、Perl、Python、PHP。应用协议：OpenWire、Stomp REST、WS Notification、XMPP、AMQP</li><li>完全支持JMS1.1和J2EE1.4规范（持久化，XA消息，事务）</li><li>虚拟主题、组合目的、镜像队列<h3 id="RabbitMQ特性"><a href="#RabbitMQ特性" class="headerlink" title="RabbitMQ特性"></a>RabbitMQ特性</h3></li><li>支持多种客户端，如：Python、Ruby、.NET、Java、JMS、C、PHP、ACtionScript等</li><li>AMQP的完整实现（vhost、Exchange、Bindind、RoutingKey等）</li><li>事务支持/发布确认</li><li>消息持久化<h3 id="Kafka特性"><a href="#Kafka特性" class="headerlink" title="Kafka特性"></a>Kafka特性</h3></li><li>通过O(1)的磁盘数据结构提供消息的持久化，这种结构对于即使数以TB的消息存储也能够保持长时间的稳定性能。</li><li>高吞吐量：即使是非常普通的硬件Kafka也可以支持每秒数百万的消息。</li><li>Partition、Consumer Group<h3 id="综合评价"><a href="#综合评价" class="headerlink" title="综合评价"></a>综合评价</h3></li></ul><table><thead><tr><th></th><th>ActiveMQ</th><th>RabbitMQ</th><th>Kafka</th></tr></thead><tbody><tr><td>跨语言</td><td>支持（Java优先）</td><td>语言无关</td><td>支持（Java优先）</td></tr><tr><td>支持协议</td><td>OpenWire、Stomp、XMPP、AMQP</td><td>AMQP</td><td></td></tr><tr><td>优点</td><td>遵循JMS规范，安装部署方便</td><td>继承Erlang天生的并发性，最初用于金融行业，稳定性，安全性有保障</td><td>依赖zk，可动态扩展节点，高性能、高吞吐量、无限扩容，消息可指定追溯</td></tr><tr><td>缺点</td><td>根据其他用户反馈，会莫名丢失消息。目前重心在下代产品apolle上，目前社区不活跃，对5.X维护较少</td><td>Erlang语言难度较大，不支持动态扩展</td><td>严格的顺序机制，不支持消息优先级，不支持标准的消息协议，不利于平台迁移</td></tr><tr><td>综合评价</td><td>适合中小企业级消息应用场景，不适合上千个队列的应用场景</td><td>适合对稳定性要求高的企业级应用</td><td>一般应用在大数据日志处理或对实时性（少量延迟），可靠性（少量丢数据）要求稍低的场景使用</td></tr></tbody></table><h3 id="JMS相关概念"><a href="#JMS相关概念" class="headerlink" title="JMS相关概念"></a>JMS相关概念</h3><ul><li>提供者：实现JMS规范的消息中间件服务器</li><li>客户端：发送或接收消息的应用程序</li><li>生产者/发布者：创建并发送消息的客户端</li><li>消费者/订阅者：接收并处理消息的客户端</li><li>消息：应用程序之间传递的数据内容</li><li>消息模式：在客户端之间传递消息的方式，JMS中定义了主题和队列两种模式<h3 id="队列模式"><a href="#队列模式" class="headerlink" title="队列模式"></a>队列模式</h3></li><li>客户端包括生产者和消费者</li><li>队列中的消息只能被一个消费者消费</li><li>消费者可以随时消费队列中的消息<br><img src="/passages/Tools/Java消息中间件/消息中间件/4.png" alt="ba643d8175c6b473a2d47f80a73eae31.png"><h3 id="主题模式"><a href="#主题模式" class="headerlink" title="主题模式"></a>主题模式</h3></li><li>客户端包括发布者和订阅者</li><li>主题中的消息被订阅者消费</li><li>消费者不能消费订阅之前就发送到主题中的消息<br><img src="/passages/Tools/Java消息中间件/消息中间件/5.png" alt="cefca0acc2301d7c09c04ea765c84b30.png"><h3 id="JMS规范"><a href="#JMS规范" class="headerlink" title="JMS规范"></a>JMS规范</h3><h4 id="JMS编码接口"><a href="#JMS编码接口" class="headerlink" title="JMS编码接口"></a>JMS编码接口</h4></li><li>ConnectionFactory：用于创建连接到消息中间件的连接工厂</li><li>Connection：代表了应用程序和消息服务器之间的通信链路</li><li>Destination：指消息发布和接收的地点，包括队列或主题</li><li>Session：表示一个单线程的上下文，用于发送和接收消息</li><li>MessageConsumer：由会话创建，用于接收发送到目标的消息</li><li>MessageProducer：由会话创建，用于发送消息到目标</li><li>Message：是在消费者和生产者之间传送的对象，消息头，一组消息属性，一个消息体<h4 id="JMS编码接口之间的关系"><a href="#JMS编码接口之间的关系" class="headerlink" title="JMS编码接口之间的关系"></a>JMS编码接口之间的关系</h4><img src="/passages/Tools/Java消息中间件/消息中间件/6.png" alt="5dbe950047d2e7e9fe55ba976668abea.png"></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;!-- 文章的摘要内容 --&gt;
    
    </summary>
    
      <category term="Tools" scheme="http://kwin1113.github.io/categories/Tools/"/>
    
      <category term="Java消息中间件" scheme="http://kwin1113.github.io/categories/Tools/Java%E6%B6%88%E6%81%AF%E4%B8%AD%E9%97%B4%E4%BB%B6/"/>
    
    
      <category term="Java消息中间件" scheme="http://kwin1113.github.io/tags/Java%E6%B6%88%E6%81%AF%E4%B8%AD%E9%97%B4%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>Shell基础</title>
    <link href="http://kwin1113.github.io/passages/Linux/Shell/Shell%E5%9F%BA%E7%A1%80/"/>
    <id>http://kwin1113.github.io/passages/Linux/Shell/Shell基础/</id>
    <published>2019-02-04T15:37:40.000Z</published>
    <updated>2019-02-04T16:54:21.671Z</updated>
    
    <content type="html"><![CDATA[<!-- 文章的摘要内容 --><a id="more"></a><!-- 文章的正式内容 --><h3 id="Shell基础"><a href="#Shell基础" class="headerlink" title="Shell基础"></a>Shell基础</h3><h4 id="1-Shell是什么"><a href="#1-Shell是什么" class="headerlink" title="1. Shell是什么"></a>1. Shell是什么</h4><ul><li>Shell是一个命令行解释器，它为用户提供了一个向Linux内核发送请求一边运行程序的界面系统级程序，用户可以用Shell来启动、挂起、停止甚至是编写一些程序。</li><li>Shell还是一个功能相当强大的编程语言，易编写，易调试，灵活性较强。Shell是解释执行的脚本语言，在Shell中可以直接调用Linux命令。<br><img src="/passages/Linux/Shell/Shell基础/1.png" alt="b6d779eb4f1a498b571e5041b1ffc221.png"><h4 id="2-Shell的分类"><a href="#2-Shell的分类" class="headerlink" title="2. Shell的分类"></a>2. Shell的分类</h4></li><li>Bourne Shell：从1979起Unix就开始使用Bourne Shell，Bourne Shell的主文件名为sh。</li><li>C Shell：C Shell主要在BSD版的Unix系统中使用，其语法和C语言相类似而得名。</li><li>Shell的两种主要语法类型有Bourne和C，这两种语法彼此不兼容。Bourne家族主要包括sh、ksh、Bash、psh、zsh；C家族主要包括：csh、tcsh</li><li>Bash：Bash与sh兼容，现在使用的Linux就是使用Bash作为用户的基本Shell。<h4 id="3-Linux支持的Shell"><a href="#3-Linux支持的Shell" class="headerlink" title="3. Linux支持的Shell"></a>3. Linux支持的Shell</h4></li><li>/etc/shells<h3 id="脚本执行方式"><a href="#脚本执行方式" class="headerlink" title="脚本执行方式"></a>脚本执行方式</h3><h4 id="1-echo输出命令"><a href="#1-echo输出命令" class="headerlink" title="1. echo输出命令"></a>1. echo输出命令</h4></li><li>echo [选项] [输出内容]<br>-e：支持反斜线控制的字符转换。</li></ul><table><thead><tr><th>控制字符</th><th>作用</th></tr></thead><tbody><tr><td>\a</td><td>输出警告音</td></tr><tr><td>\b</td><td>退格键，也就是向左删除键</td></tr><tr><td>\n</td><td>换行键</td></tr><tr><td>\r</td><td>回车键</td></tr><tr><td>\t</td><td>制表符，也就是tab键</td></tr><tr><td>\v</td><td>垂直制表符</td></tr><tr><td>\0nnn</td><td>按照八进制ASCII码表输出字符。其中0为数字零，nnn是三位八进制数</td></tr><tr><td>\xhh</td><td>按照十六进制ASCII码表输出字符。其中hh是两位十六进制数</td></tr></tbody></table><ul><li>echo -e \”\68\t\x65\t\x6c\n\x6c\t\x6f\t”<br>#按照十六进制ASCII码也同样可以输出</li><li>echo -e “\e[1;31m 嫁人就要嫁凤姐 \e[0m”<br>#输出颜色</li><li>#30m=黑色，31m=红色，32m=绿色，33m=黄色</li><li>#34m=蓝色，35m=洋红，36m=青色，37m=白色<h4 id="2-第一个脚本"><a href="#2-第一个脚本" class="headerlink" title="2. 第一个脚本"></a>2. 第一个脚本</h4></li><li>vim hello.sh</li><li>#!/bin/bash</li><li>#The first program</li><li>echo -e “\e[1;34m 天上掉下个林妹妹 \e[0m”<h4 id="3-脚本执行"><a href="#3-脚本执行" class="headerlink" title="3. 脚本执行"></a>3. 脚本执行</h4></li><li>赋予执行权限，直接运行<br>chmod 755 hello.sh<br>./hello.sh</li><li>通过Bash调用执行脚本<br>bash hello.sh<h3 id="Bash的基本功能"><a href="#Bash的基本功能" class="headerlink" title="Bash的基本功能"></a>Bash的基本功能</h3><h4 id="查看与设定别名"><a href="#查看与设定别名" class="headerlink" title="查看与设定别名"></a>查看与设定别名</h4></li><li>alias<br>#查看系统中所有的命令别名</li><li>alias 别名=‘原命令’<br>#设定命令别名<h4 id="别名永久生效与删除别名"><a href="#别名永久生效与删除别名" class="headerlink" title="别名永久生效与删除别名"></a>别名永久生效与删除别名</h4></li><li>vi ~/.bashrc<br>#写入环境变量配置文件</li><li>unalias 别名<br>#删除别名<h4 id="命令生效顺序"><a href="#命令生效顺序" class="headerlink" title="命令生效顺序"></a>命令生效顺序</h4></li><li>第一顺位执行用绝对路径或相对路径执行的命令</li><li>第二顺位执行别名</li><li>第三顺位执行Bash的内部命令</li><li>第四顺位执行按照$PATH环境变量定义的目录查找顺序找到的第一个命令<h4 id="常用快捷键"><a href="#常用快捷键" class="headerlink" title="常用快捷键"></a>常用快捷键</h4></li><li>ctrl+c：强制终止当前命令</li><li>ctrl+l：清屏</li><li>ctrl+a：光标移动到命令行首</li><li>ctrl+e：光标移动到命令行尾</li><li>ctrl+u：从光标所在位置删除到行首</li><li>ctrl+z：把命令放在后台</li><li>ctrl+r：在历史命令中搜索<h3 id="历史命令"><a href="#历史命令" class="headerlink" title="历史命令"></a>历史命令</h3><h4 id="1-历史命令"><a href="#1-历史命令" class="headerlink" title="1. 历史命令"></a>1. 历史命令</h4></li><li>history [选项] [历史命令保存文件]<br>-c：清空历史命令<br>-w：把缓存中的历史命令写入历史命令保存文件~/.bash_history</li><li>历史命令默认会保存1000条，可以在环境变量配置文件/etc/profile中进行修改<h5 id="历史命令的调用"><a href="#历史命令的调用" class="headerlink" title="历史命令的调用"></a>历史命令的调用</h5></li><li>使用上、下箭头调用以前的历史命令</li><li>使用“!n”重复执行第n条历史命令</li><li>使用“!!”重复执行上一条命令</li><li>使用“!字符”重复执行最后一条以该字符串开头的命令<h4 id="2-命令与文件补全"><a href="#2-命令与文件补全" class="headerlink" title="2. 命令与文件补全"></a>2. 命令与文件补全</h4></li><li>在Bash中，命令与文件补全是非常方便与常用的功能，我们只要在输入命令或文件时，按“Tab”键就会自动进行补全。</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;!-- 文章的摘要内容 --&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://kwin1113.github.io/categories/Linux/"/>
    
      <category term="Shell(持更...)" scheme="http://kwin1113.github.io/categories/Linux/Shell-%E6%8C%81%E6%9B%B4/"/>
    
    
      <category term="Linux" scheme="http://kwin1113.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>VIM编辑器</title>
    <link href="http://kwin1113.github.io/passages/Linux/Commands/VIM%E7%BC%96%E8%BE%91%E5%99%A8/"/>
    <id>http://kwin1113.github.io/passages/Linux/Commands/VIM编辑器/</id>
    <published>2019-02-04T15:36:28.000Z</published>
    <updated>2019-02-04T16:53:32.612Z</updated>
    
    <content type="html"><![CDATA[<!-- 文章的摘要内容 --><a id="more"></a><!-- 文章的正式内容 --><h3 id="VI编辑器的操作模式"><a href="#VI编辑器的操作模式" class="headerlink" title="VI编辑器的操作模式"></a>VI编辑器的操作模式</h3><ul><li>Command Mode - 命令模式</li><li>Insert Mode - 输入模式</li><li>Last Line Mode - 底行模式<br><img src="/passages/Linux/Commands/VIM编辑器/1.png" alt="b4f7ae1073dda771b41245d74d349782.png"><h3 id="常用指令"><a href="#常用指令" class="headerlink" title="常用指令"></a>常用指令</h3><h4 id="底行模式常用指令"><a href="#底行模式常用指令" class="headerlink" title="底行模式常用指令"></a>底行模式常用指令</h4>:w<br>:q<br>:!<br>:ls<br>:n<br>:15<br>/xxx<br>?xxx<h4 id="命令模式常用指令"><a href="#命令模式常用指令" class="headerlink" title="命令模式常用指令"></a>命令模式常用指令</h4>h：光标左移<br>j：光标下移<br>k：光标上移<br>l：光标右移<br>ctrl+f：向下翻页<br>ctrl+b：向上翻页<br>ctrl+d：向下翻半页<br>ctrl+u：向上翻半夜<br>dd：删除光标所在行<br>o：在光标所在行的下方插入一行并切换到输出模式<br>yy：复制光标所在的行<br>p：在光标所在行的下方粘贴<br>P：在光标所在行的上方粘贴</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;!-- 文章的摘要内容 --&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://kwin1113.github.io/categories/Linux/"/>
    
      <category term="常用命令" scheme="http://kwin1113.github.io/categories/Linux/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    
    
      <category term="Linux" scheme="http://kwin1113.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>用户管理</title>
    <link href="http://kwin1113.github.io/passages/Linux/SysManage/%E7%94%A8%E6%88%B7%E7%AE%A1%E7%90%86/"/>
    <id>http://kwin1113.github.io/passages/Linux/SysManage/用户管理/</id>
    <published>2019-02-04T15:35:58.000Z</published>
    <updated>2019-02-04T16:54:50.354Z</updated>
    
    <content type="html"><![CDATA[<!-- 文章的摘要内容 --><a id="more"></a><!-- 文章的正式内容 --><h3 id="用户和用户组"><a href="#用户和用户组" class="headerlink" title="用户和用户组"></a>用户和用户组</h3><ul><li>用户：使用操作系统的人</li><li>用户组：具有相同系统权限的一组用户</li><li>/etc/group：存储当前系统中所有用户组信息<br>-Group ：x ：123 ：abc,def,xyz<br>-组名称 ：组密码占位符 ：组编号 ：组中用户名列表</li><li>/etc/gshadow：存储当前系统中用户组的密码信息<br>-Group ：* ：  ：abc,def,xyz<br>-组名称 ：组密码 ：组管理者 ：组中用户名列表</li><li>/etc/passwd：存储当前系统中所有用户的信息<br>-user ：x ：123 ：456 ： xxxxxxxxx ：/home/user/ ：/bin/bash<br>-用户名 ：密码占位符 ：用户编号 ：用户组编号 ：用户注释信息 ：用户主目录 ：shell类型</li><li>/etc/shadow：存储当前系统中所有用户的密码信息<br>-user ：vf；Zu8sdf… ：：：：：<br>-用户名 ：密码 ：：：：：<h3 id="其他命令"><a href="#其他命令" class="headerlink" title="其他命令"></a>其他命令</h3></li><li>whoami<br>-我是谁？显示当前登陆用户</li><li>id kwin<br>-显示指定用户信息，包括用户编号、用户名</li><li>groups kwin<br>-显示kwin用户所在的所有组</li><li>chfn kwin<br>-设置用户资料，一次输入用户资料</li><li>finger kwin<br>-显示用户详细资料</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;!-- 文章的摘要内容 --&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://kwin1113.github.io/categories/Linux/"/>
    
      <category term="系统管理" scheme="http://kwin1113.github.io/categories/Linux/%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86/"/>
    
    
      <category term="Linux" scheme="http://kwin1113.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>磁盘管理</title>
    <link href="http://kwin1113.github.io/passages/Linux/SysManage/%E7%A3%81%E7%9B%98%E7%AE%A1%E7%90%86/"/>
    <id>http://kwin1113.github.io/passages/Linux/SysManage/磁盘管理/</id>
    <published>2019-02-04T15:35:22.000Z</published>
    <updated>2019-02-04T16:54:53.342Z</updated>
    
    <content type="html"><![CDATA[<!-- 文章的摘要内容 --><a id="more"></a><!-- 文章的正式内容 --><h3 id="磁盘管理"><a href="#磁盘管理" class="headerlink" title="磁盘管理"></a>磁盘管理</h3><ul><li>df：查看磁盘分区使用状况<br>-l：仅显示本地磁盘（默认）<br>-a：显示所有文件系统的磁盘使用情况，包含比如/proc/<br>-h：以1024进制计算最合适的单位显示磁盘容量<br>-H：以1000进制计算最合适的单位显示磁盘容量<br>-T：显示磁盘分区类型<br>-t：显示指定类型文件系统的磁盘分区<br>-x：不显示指定类型文件系统的磁盘分区</li><li>du：统计磁盘上的文件大小<br>-b：以byte为单位统计文件<br>-k：以KB为单位统计文件<br>-m：以MB为单位统计文件<br>-h：按照1024进制以最合适的单位统计文件<br>-H：按照1000进制以最合适的单位统计文件<br>-s：指定统计目标<h3 id="添加硬盘"><a href="#添加硬盘" class="headerlink" title="添加硬盘"></a>添加硬盘</h3><h3 id="分区"><a href="#分区" class="headerlink" title="分区"></a>分区</h3><h3 id="格式化"><a href="#格式化" class="headerlink" title="格式化"></a>格式化</h3></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;!-- 文章的摘要内容 --&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://kwin1113.github.io/categories/Linux/"/>
    
      <category term="系统管理" scheme="http://kwin1113.github.io/categories/Linux/%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86/"/>
    
    
      <category term="Linux" scheme="http://kwin1113.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>压缩与解压缩命令</title>
    <link href="http://kwin1113.github.io/passages/Linux/Commands/%E5%8E%8B%E7%BC%A9%E4%B8%8E%E8%A7%A3%E5%8E%8B%E7%BC%A9%E5%91%BD%E4%BB%A4/"/>
    <id>http://kwin1113.github.io/passages/Linux/Commands/压缩与解压缩命令/</id>
    <published>2019-02-04T15:34:21.000Z</published>
    <updated>2019-02-04T16:53:35.284Z</updated>
    
    <content type="html"><![CDATA[<!-- 文章的摘要内容 --><a id="more"></a><!-- 文章的正式内容 --><h3 id="常用压缩格式"><a href="#常用压缩格式" class="headerlink" title="常用压缩格式"></a>常用压缩格式</h3><ul><li>.zip  .gz  .bz2</li><li>.tar.gz  .tar.bz2<h3 id="zip格式压缩"><a href="#zip格式压缩" class="headerlink" title=".zip格式压缩"></a>.zip格式压缩</h3></li><li>zip 压缩文件名 源文件<br>#压缩文件</li><li>zip -r 压缩文件名 源目录<br>#压缩目录<h3 id="zip格式解压缩"><a href="#zip格式解压缩" class="headerlink" title=".zip格式解压缩"></a>.zip格式解压缩</h3></li><li>unzip 压缩文件<br>#解压缩.zip文件<h3 id="gz格式压缩"><a href="#gz格式压缩" class="headerlink" title=".gz格式压缩"></a>.gz格式压缩</h3></li><li>gzip 源文件<br>#压缩为.gz格式的压缩文件，源文件会消失</li><li>gzip -c 源文件 &gt; 压缩文件<br>#压缩为.gz格式，源文件保留<br>例如：gzip -c cangls &gt; cangls.gz</li><li>gzip -r 目录<br>#压缩目录下所有的子文件，但是不能压缩目录<h3 id="gz格式解压缩"><a href="#gz格式解压缩" class="headerlink" title=".gz格式解压缩"></a>.gz格式解压缩</h3></li><li>gzip -d 压缩文件<br>#解压缩文件</li><li>gunzip 压缩文件<br>#解压缩文件<h3 id="bz2格式压缩"><a href="#bz2格式压缩" class="headerlink" title=".bz2格式压缩"></a>.bz2格式压缩</h3></li><li>bzip2 源文件<br>#压缩为.bz2格式，不保留源文件</li><li>bzip2 -k 源文件<br>#压缩之后保留源文件</li><li>注意：bzip2命令不能压缩目录<h3 id="bz2格式解压缩"><a href="#bz2格式解压缩" class="headerlink" title=".bz2格式解压缩"></a>.bz2格式解压缩</h3></li><li>bzip2 -d 压缩文件<br>#解压缩，-k保留压缩文件</li><li>bunzip2 压缩文件<br>#解压缩，-k保留压缩文件<h3 id="打包命令tar"><a href="#打包命令tar" class="headerlink" title="打包命令tar"></a>打包命令tar</h3></li><li>tar -cvf 打包文件名 源文件<br>-c：打包<br>-v：显示过程<br>-f：指定打包后的文件名</li><li>例如：<br>tar -cvf longzls.tar longzls<h3 id="解打包命令"><a href="#解打包命令" class="headerlink" title="解打包命令"></a>解打包命令</h3></li><li>tar -xvf 打包文件名<br>-x：解打包</li><li>例如：<br>tar -xvf longzls.tar<h3 id="tar-gz压缩格式"><a href="#tar-gz压缩格式" class="headerlink" title=".tar.gz压缩格式"></a>.tar.gz压缩格式</h3></li><li>.tar.gz格式先打包为.tar格式，再压缩为.gz格式</li><li>tar -zcvf 压缩包名.tar.gz 源文件</li><li>tar -zxvf 压缩包名.tar.gz<br>-z：压缩为.tar.gz格式<br>-x：解压缩.tar.gz格式<h3 id="tar-bz2压缩格式"><a href="#tar-bz2压缩格式" class="headerlink" title=".tar.bz2压缩格式"></a>.tar.bz2压缩格式</h3></li><li>tar -jcvf 压缩包名.tar.bz2 源文件</li><li>tar -jxvf 压缩包名.tar.bz2<br>-z：压缩为.tar.bz2格式<br>-x：解压缩.tar.bz2格式</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;!-- 文章的摘要内容 --&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://kwin1113.github.io/categories/Linux/"/>
    
      <category term="常用命令" scheme="http://kwin1113.github.io/categories/Linux/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    
    
      <category term="Linux" scheme="http://kwin1113.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>帮助命令</title>
    <link href="http://kwin1113.github.io/passages/Linux/Commands/%E5%B8%AE%E5%8A%A9%E5%91%BD%E4%BB%A4/"/>
    <id>http://kwin1113.github.io/passages/Linux/Commands/帮助命令/</id>
    <published>2019-02-04T15:34:05.000Z</published>
    <updated>2019-02-04T16:53:37.359Z</updated>
    
    <content type="html"><![CDATA[<!-- 文章的摘要内容 --><a id="more"></a><!-- 文章的正式内容 --><h3 id="帮助命令man"><a href="#帮助命令man" class="headerlink" title="帮助命令man"></a>帮助命令man</h3><ul><li>man命令<br>#获取指定命令的帮助</li><li>man ls<br>#查看ls的帮助<h4 id="man的级别"><a href="#man的级别" class="headerlink" title="man的级别"></a>man的级别</h4></li><li>1：查看命令的帮助</li><li>2：查看可被内核调用的函数的帮助</li><li>3：查看函数和函数库的帮助</li><li>4：查看特殊文件的帮助（主要是/dev目录下的文件）</li><li>5：查看配置文件的帮助</li><li>6：查看游戏的帮助</li><li>7：查看其他杂项的帮助</li><li>8：查看系统管理员可用命令的帮助</li><li>9：查看和内核相关文件的帮助<h3 id="查看命令拥有哪个级别的帮助"><a href="#查看命令拥有哪个级别的帮助" class="headerlink" title="查看命令拥有哪个级别的帮助"></a>查看命令拥有哪个级别的帮助</h3></li><li>man -f 命令</li></ul><p>相当于</p><ul><li>whatis 命令</li></ul><p>举例：</p><ul><li>man -5 passwd</li><li>man -4 null</li><li>man -8 ifconfig<h3 id="查看和命令相关的所有帮助"><a href="#查看和命令相关的所有帮助" class="headerlink" title="查看和命令相关的所有帮助"></a>查看和命令相关的所有帮助</h3></li><li>man -k 命令</li></ul><p>相当于</p><ul><li>apropos 命令</li></ul><p>例如：</p><ul><li>apropos passwd<h3 id="shell内部命令帮助"><a href="#shell内部命令帮助" class="headerlink" title="shell内部命令帮助"></a>shell内部命令帮助</h3></li><li>help shell 内部命令<br>#获取shell内部命令的帮助</li></ul><p>例如：</p><ul><li>whereis cd<br>#确定是否是shell内部命令</li><li>help cd<br>#获取内部命令帮助<h3 id="详细命令帮助info"><a href="#详细命令帮助info" class="headerlink" title="详细命令帮助info"></a>详细命令帮助info</h3></li><li>info 命令<br>-回车：进入子帮助页面（带有*号标记）<br>-u：进入上层页面<br>-n：进入下一个帮助小结<br>-p：进入上一个帮助小结<br>-q：退出</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;!-- 文章的摘要内容 --&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://kwin1113.github.io/categories/Linux/"/>
    
      <category term="常用命令" scheme="http://kwin1113.github.io/categories/Linux/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    
    
      <category term="Linux" scheme="http://kwin1113.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>文件搜索命令</title>
    <link href="http://kwin1113.github.io/passages/Linux/Commands/%E6%96%87%E4%BB%B6%E6%90%9C%E7%B4%A2%E5%91%BD%E4%BB%A4/"/>
    <id>http://kwin1113.github.io/passages/Linux/Commands/文件搜索命令/</id>
    <published>2019-02-04T15:33:47.000Z</published>
    <updated>2019-02-04T16:53:42.311Z</updated>
    
    <content type="html"><![CDATA[<!-- 文章的摘要内容 --><a id="more"></a><!-- 文章的正式内容 --><h3 id="locate"><a href="#locate" class="headerlink" title="locate"></a>locate</h3><h4 id="locate格式"><a href="#locate格式" class="headerlink" title="locate格式"></a>locate格式</h4><ul><li>locate 文件名<br>在后台数据库中按文件名搜索，搜索速度更快</li><li>/var/lib/mlocate<br>#locate</li><li>updatedb<br>更新数据库<h4 id="etc-updatedb-conf配置文件"><a href="#etc-updatedb-conf配置文件" class="headerlink" title="/etc/updatedb.conf配置文件"></a>/etc/updatedb.conf配置文件</h4></li><li>PRUNE_BIND_MOUNTS=”yes”<br>#开启搜索限制</li><li>PRUNEFS=<br>#搜索时，不搜索的文件系统</li><li>PRUNENAMES=<br>#搜索时，不搜索的文件类型</li><li>PRUNEPATHS=<br>#搜索时，不搜索的文件路径<h3 id="搜索命令的命令"><a href="#搜索命令的命令" class="headerlink" title="搜索命令的命令"></a>搜索命令的命令</h3><h4 id="whereis"><a href="#whereis" class="headerlink" title="whereis"></a>whereis</h4></li><li>whereis 命令名<br>#搜索命令所在路径及帮助文档所在位置<br>选项：<br>-b：只查找可执行文件<br>-m：之查找帮助文件<h4 id="which"><a href="#which" class="headerlink" title="which"></a>which</h4></li><li>which 文件名<br>#搜索命令所在路径及别名<h3 id="find命令"><a href="#find命令" class="headerlink" title="find命令"></a>find命令</h3></li><li>find [搜索范围] [搜索条件]<br>#搜索文件</li><li>find / -name install.log<br>#避免大范围搜索，会非常耗费系统资源<br>#find是在系统当中搜索符合条件的文件名。如果需要匹配，使用通配符匹配，通配符是完全匹配<h3 id="grep命令"><a href="#grep命令" class="headerlink" title="grep命令"></a>grep命令</h3></li><li>grep [选项] 字符串 文件名<br>#在文件当中匹配符合条件的字符串<br>-i：忽略大小写<br>-v：排除指定字符串<h3 id="find命令与grep命令的区别"><a href="#find命令与grep命令的区别" class="headerlink" title="find命令与grep命令的区别"></a>find命令与grep命令的区别</h3></li><li>find命令：在系统当中搜索符合条件的文件名，如果需要匹配，使用通配符匹配，通配符是完全匹配。</li><li>grep命令：在文件当中搜索符合条件的字符串，如果需要匹配，使用正则表达式匹配，正则表达式是包含匹配。<h3 id="PATH环境变量"><a href="#PATH环境变量" class="headerlink" title="PATH环境变量"></a>PATH环境变量</h3></li><li>PATH环境变量：定义的是系统搜索命令的路径</li><li>echo $PATH<br>/usr/lib/qt-3.3/bin:/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin:/root/bin<h3 id="Linux中的通配符"><a href="#Linux中的通配符" class="headerlink" title="Linux中的通配符"></a>Linux中的通配符</h3></li></ul><table><thead><tr><th>符号</th><th>匹配内容</th></tr></thead><tbody><tr><td>*</td><td>匹配任意内容</td></tr><tr><td>？</td><td>匹配任意一个字符</td></tr><tr><td>[]</td><td>匹配任意一个中括号内的字符</td></tr></tbody></table><ul><li>find /root -iname install.log<br>#不区分大小写</li><li>find /root -user root<br>#按照所有者搜索</li><li>find /root -nouser<br>#查找没有所有者的文件</li><li>find /var/log/ -mtime +10</li></ul><p>-10 10天内修改的文件<br>10 10天当天修改的文件<br>+10 10天前修改的文件</p><p>atime 文件访问时间<br>ctime 改变文件属性<br>mtime 修改文件内容</p><ul><li>find . -size 25k<br>#查找文件大小是25KB的文件</li></ul><p>-25k 小于25KB的文件<br>25k 等于25KB的文件<br>+25k 大于25KB的文件</p><ul><li>find . -inum 262422<br>#查找i节点是262422的文件</li><li><p>find /etc -size +20k -a -size -50k<br>#查找/etc/目录下，大于20KB并且小于50KB的文件<br>-a and 逻辑与，两个条件都满足<br>-o or 逻辑或，两个条件满足一个即可</p></li><li><p>find /etc -size +20k -a -size -50k -exec ls -lh {} \;<br>#查找/etc/目录下，大于20KB并且小于50KB的文件，并显示详细信息<br>#-exec/-ok命令{} \；对搜索结果执行操作</p></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;!-- 文章的摘要内容 --&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://kwin1113.github.io/categories/Linux/"/>
    
      <category term="常用命令" scheme="http://kwin1113.github.io/categories/Linux/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    
    
      <category term="Linux" scheme="http://kwin1113.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>文件处理命令</title>
    <link href="http://kwin1113.github.io/passages/Linux/Commands/%E6%96%87%E4%BB%B6%E5%A4%84%E7%90%86%E5%91%BD%E4%BB%A4/"/>
    <id>http://kwin1113.github.io/passages/Linux/Commands/文件处理命令/</id>
    <published>2019-02-04T15:33:03.000Z</published>
    <updated>2019-02-04T16:53:39.874Z</updated>
    
    <content type="html"><![CDATA[<!-- 文章的摘要内容 --><a id="more"></a><!-- 文章的正式内容 --><h4 id="建立目录：mkdir"><a href="#建立目录：mkdir" class="headerlink" title="建立目录：mkdir"></a>建立目录：mkdir</h4><ul><li>mkdir -p [目录名]<br>-p：递归创建<h4 id="切换所在目录：cd"><a href="#切换所在目录：cd" class="headerlink" title="切换所在目录：cd"></a>切换所在目录：cd</h4></li><li>cd [目录]</li><li>简化操作<br>-cd ~：进入当前用户的家目录<br>-cd：进入当前用户的家目录<br>-cd -：进入上次目录<br>-cd ..：进入上一级目录<br>-cd .：进入当前目录</li><li>相对路径：参考当前所在目录进行查找<br>如：cd ../usr/local/src/</li><li>绝对路径：从根目录开始指定，一级一级递归查找。在任何目录下都能进入指定位置<br>如：cd /etc/<h4 id="查询目录所在位置：pwd"><a href="#查询目录所在位置：pwd" class="headerlink" title="查询目录所在位置：pwd"></a>查询目录所在位置：pwd</h4></li><li>pwd<h4 id="删除空目录：rmdir"><a href="#删除空目录：rmdir" class="headerlink" title="删除空目录：rmdir"></a>删除空目录：rmdir</h4></li><li>rmdir [目录名]</li></ul><h4 id="删除文件或目录：rm"><a href="#删除文件或目录：rm" class="headerlink" title="删除文件或目录：rm"></a>删除文件或目录：rm</h4><ul><li>rm -rf [文件或目录]<br>[选项]<br>-r：删除目录<br>-f：强制<h4 id="复制命令：cp"><a href="#复制命令：cp" class="headerlink" title="复制命令：cp"></a>复制命令：cp</h4></li><li>cp [选项] [原文件或目录] [目标目录]<br>[选项]<br>-r：复制目录<br>-p：连带文件属性复制<br>-d：若源文件是链接文件，则复制链接属性<br>-a：相当于-pdr<h4 id="剪切或改名命令：mv"><a href="#剪切或改名命令：mv" class="headerlink" title="剪切或改名命令：mv"></a>剪切或改名命令：mv</h4></li><li>mv [原文件或目录] [目标目录]<h4 id="常用目录的作用"><a href="#常用目录的作用" class="headerlink" title="常用目录的作用"></a>常用目录的作用</h4></li><li>/：根目录</li><li>/bin：命令保存目录（普通用户就可以读取的命令）</li><li>/boot：启动目录，启动相关文件</li><li>/dev：设备文件保存目录</li><li>/etc：配置文件保存目录</li><li>/home：普通用户的家目录</li><li>/lib：系统库保存目录</li><li>/mnt：系统挂载目录</li><li>/media：挂载目录</li><li>/root：超级用户的家目录</li><li>/tmp：临时目录</li><li>/sbin：命令保存目录（超级用户才能使用的目录）</li><li>/proc：直接写入内存的</li><li>/sys：系统</li><li>/usr：系统软件资源目录<br>/usr/bin/系统命令（普通用户）<br>/usr/sbin/系统命令（超级用户）</li><li>/var：系统相关文档内容<h4 id="链接命令：ln"><a href="#链接命令：ln" class="headerlink" title="链接命令：ln"></a>链接命令：ln</h4></li><li>ln -s [原文件] [目标文件]</li><li>生成链接文件</li><li>-s：生成软链接</li><li>硬链接特征：</li></ul><ol><li>拥有相同的i节点和存储block块，可以看作是同一个文件</li><li>可通过i节点识别</li><li>不能跨分区</li><li>不能针对目录使用</li></ol><ul><li>软连接特征：</li></ul><ol><li>类似windows快捷方式</li><li>软连接拥有自己的i节点和block块，但是数据块中只保存原文件的文件名和i节点号，并没有实际的文件数据</li><li>lrwxrwxrwx |软连接<br>软连接文件全写都为rwxrwxrwx</li><li>修改任意文件，另一个都改变</li><li>删除源文件，软链接不能使用</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;!-- 文章的摘要内容 --&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://kwin1113.github.io/categories/Linux/"/>
    
      <category term="常用命令" scheme="http://kwin1113.github.io/categories/Linux/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    
    
      <category term="Linux" scheme="http://kwin1113.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>源码包服务管理</title>
    <link href="http://kwin1113.github.io/passages/Linux/ServiceManage/%E6%BA%90%E7%A0%81%E5%8C%85%E6%9C%8D%E5%8A%A1%E7%AE%A1%E7%90%86/"/>
    <id>http://kwin1113.github.io/passages/Linux/ServiceManage/源码包服务管理/</id>
    <published>2019-02-04T15:31:14.000Z</published>
    <updated>2019-02-04T16:54:09.862Z</updated>
    
    <content type="html"><![CDATA[<!-- 文章的摘要内容 --><a id="more"></a><!-- 文章的正式内容 --><h3 id="1-源码包安装服务的启动"><a href="#1-源码包安装服务的启动" class="headerlink" title="1. 源码包安装服务的启动"></a>1. 源码包安装服务的启动</h3><ul><li>使用绝对路径，调用启动脚本来启动。不同的源码包的启动脚本不同。可以查看源码包的安装说明，查看启动脚本的方法。<br>/usr/local/apache2/bin/apachectl start|stop<h3 id="2-源码包服务的自启动"><a href="#2-源码包服务的自启动" class="headerlink" title="2. 源码包服务的自启动"></a>2. 源码包服务的自启动</h3></li><li>vim /etc/rc.d/rc.local</li><li>加入</li><li>/usr/local/apache2/bin/apachectl start<h3 id="3-让源码包服务被服务管理命令识别"><a href="#3-让源码包服务被服务管理命令识别" class="headerlink" title="3. 让源码包服务被服务管理命令识别"></a>3. 让源码包服务被服务管理命令识别</h3></li><li>让源码包的apache服务能被service命令管理启动<br>ln  -s /usr/local/apache2/bin/apachectl /etc/init.d/apache<br>或<br>cp /usr/local/apache2/bin/apachectl /etc/init.d/apache</li><li><p>让源码包的apache服务能被chkconfig与ntsysv命令管理自启动</p></li><li><p>vim /etc/init.d/apache<br>#chkconfig : 35 86 76<br>#指定httpd脚本可以被chkconfig命令管理。格式是：chkconfig：运行级别 启动顺序 关闭顺序<br>#description：source package apache<br>#说明</p></li><li>chkconfig –add apache<br>#把源码包apache加入chkconfig命令</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;!-- 文章的摘要内容 --&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://kwin1113.github.io/categories/Linux/"/>
    
      <category term="服务管理" scheme="http://kwin1113.github.io/categories/Linux/%E6%9C%8D%E5%8A%A1%E7%AE%A1%E7%90%86/"/>
    
    
      <category term="Linux" scheme="http://kwin1113.github.io/tags/Linux/"/>
    
  </entry>
  
</feed>
